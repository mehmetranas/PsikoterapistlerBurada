@using PsikoterapsitlerBurada.Models 
@model PsikoterapsitlerBurada.Models.ViewModels.SelectUserToAskQuestionViewModel
@{
    ViewBag.Title = "SelectUserToAskQuestion";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Soru</h2>

<div class="panel panel-success">
    <div class="panel-heading">
        <span>Bu soru kimlere sormak istersiniz? </span>
        </div>
    <div class="panel-body">
        @Model.Question.QuestionText
    </div>
</div>

<hr />

<table cellspacing="0" class="table table-striped" id="js-users" width="100%">
    <thead>
        <tr>
            <th>İsim</th>
            <th>Kategori</th>
            <th>
                <button type="button" class="btn btn-default btn-sm js-submit">Tamam</button>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var user in Model.Users)
        {
            <tr>
                <td>
                    <a href=@Url.Action("UserProfile", "User", new {id = user.Id})>
                        @user.UserName
                    </a>
                </td>
                <td>Kategori</td>
                <td>
                    <button class="btn btn-link js-username" id="@user.Id" data-username="@user.UserName">Seç</button>
                </td>
            </tr>
        }
    </tbody>
</table>

<hr />

<table class="table table-striped" id="js-selected" width="100%">
    <tr>
        <th>Seçilenler</th>
        <th></th>
    </tr>
</table>


@section scripts
{
    <script>
       
        $(document).ready(function () {
            //Datatable
            $("#js-users").DataTable(
                {
                    "language":{
                        "sDecimal": ",",
                        "sEmptyTable": "Tabloda herhangi bir veri mevcut değil",
                        "sInfo": "_TOTAL_ kayıttan _START_ - _END_ arasındaki kayıtlar gösteriliyor",
                        "sInfoEmpty": "Kayıt yok",
                        "sInfoFiltered": "(_MAX_ kayıt içerisinden bulunan)",
                        "sInfoPostFix": "",
                        "sInfoThousands": ".",
                        "sLengthMenu": "Sayfada _MENU_ kayıt göster",
                        "sLoadingRecords": "Yükleniyor...",
                        "sProcessing": "İşleniyor...",
                        "sSearch": "Ara:",
                        "sZeroRecords": "Eşleşen kayıt bulunamadı",
                        "oPaginate": {
                            "sFirst": "İlk",
                            "sLast": "Son",
                            "sNext": "Sonraki",
                            "sPrevious": "Önceki"
                        },
                        "oAria": {
                            "sSortAscending": ": artan sütun sıralamasını aktifleştir",
                            "sSortDescending": ": azalan sütun sıralamasını aktifleştir"
                        }
                    }
                });

            var selectedUsers = [];
            var questionId = @Model.Question.Id;

            $(".js-username").click(function (select) {

                var selectedUserId = $(select.target).attr('id');
                var selectButton = document.getElementById(selectedUserId);
                selectButton.innerText = "Eklendi";
                selectButton.disabled = true;
                var username = $(select.target).attr("data-username");
                var table = document.getElementById("js-selected");
                var row = table.insertRow(table.rows.length);
                var userCell = row.insertCell(0);
                var actionCell = row.insertCell(1);
                var removeUser = document.createElement("button");
                removeUser.innerText = "Çıkar";
                removeUser.setAttribute("user-id", selectedUserId);
                removeUser.className = "btn btn-link js-remove-user";
                userCell.innerHTML = username;
                actionCell.appendChild(removeUser);
                $(row).addClass("animated pulse");
                selectedUsers.push(selectedUserId);
            });
            
            $(document).on("click",
                ".js-remove-user",
                function (remove) {
                    var removeUserId = $(remove.target).attr("user-id");
                    var removeButton = $(this);
                    var userButton = document.getElementById(removeUserId);
                    var row = removeButton.closest("tr");
                    userButton.innerText = "Seç";
                    userButton.disabled = false;
                    $(row).addClass("animated fadeOut")
                        .one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend',
                            function() {
                                $(this).remove();
                            });
                    selectedUsers.splice(selectedUsers.indexOf(removeUserId), 1);
                });

            $(".js-submit").click(function () {
                $.ajax({
                    url: "/api/selectedusers",
                    type: "post",
                    contentType: "application/json",
                    data: JSON.stringify({selectedUsersId:selectedUsers, questionId:questionId}),
                    success: function() {
                        bootbox.alert("Tebrikler sorunuz yola çıktı.",
                            function() {
                                window.location.href = "/User/GetMyQuestions";
                            });
                    }
                });
            });
        });

    </script>
}
