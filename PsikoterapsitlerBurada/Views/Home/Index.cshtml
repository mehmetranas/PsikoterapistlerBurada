@model IEnumerable<PsikoterapsitlerBurada.Models.Question>
@{
    ViewBag.Title = "Home Page";
}

<h4>Sorular</h4>

@foreach (var question in Model)
{
    <div class="jumbotron question-table">
        <table class="table-condensed questions">
            <tr>
                <td>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="vote">
                                <div class="text-center">
                                    <span class="glyphicon glyphicon-chevron-up js-vote"
                                          data-vote-action="1"
                                          data-toggle ="tooltip"
                                          title="Giriş yapmalısınız"
                                          data-questionId=@question.Id></span>
                                </div>
                                <div class="text-center">
                                    <p class="vote-counter">@question.TotalVotes</p>
                                </div>
                                <div class="text-center">
                                    <span class="glyphicon glyphicon-chevron-down js-vote"
                                          data-vote-action="-1"
                                          data-toggle ="tooltip"
                                          title="Giriş yapmalısınız"
                                          data-questionId=@question.Id></span>
                                </div>
                            </div>

                        </div>
                    </div>
                </td>
                <td class="question-text">
                    <div class="question">
                        <div class="who-asked">
                            <a href=@Url.Action("UserProfile", "User", new {id = question.WhoAsked.Id})>
                                <small>@question.WhoAsked.UserName</small>
                            </a>
                        </div>
                        <div class="question-text">
                            <a href=@Url.Action("GetAnswers", "Answers", new {id = question.Id}) class="question-text">
                                @question.QuestionText
                            </a>
                        </div>
                    </div>
                </td>
            </tr>
            <tr>
                <td>
                    <div class="text-center">
                        <p>@question.Answers.Count</p>
                        <span class="label label-default">Cevap</span>
                    </div>
                </td>
                <td>
                    @foreach (var user in question.AskedToWhom)
                    {
                        <a href=@Url.Action("UserProfile","User", new {id = user.Id})>
                            <span class="tag">@user.UserName</span>
                        </a>
                    }
                </td>
            </tr>
        </table>
        <div class="favorite">
            <span class="glyphicon glyphicon-star pull-right" 
                  data-toggle ="tooltip"
                  title = "Giriş yapmalısınız"
                  data-questionId = @question.Id></span>
        </div>
</div>
}

@section scripts{
    <script>
        $(document).ready(function () {
            var auth = @User.Identity.IsAuthenticated.ToString().ToLower();

            //Write comman event over this code because of return command
            if (!auth) {
                $('[data-toggle = "tooltip"]').each(function (index, element) {
                    $(element).tooltip();
                });
                return;
            } else {
                $('[data-toggle = "tooltip"]').each(function (index, element) {
                    $(element).tooltip("destroy");
                    getFavoriteQuestions();
                });

            //remove-add favorite questions
            $(".favorite span").click(function (e) {
                var spanEl = e.target;
                var id = $(spanEl).attr("data-questionId");

                $.post("/api/favorite/" + id)
                    .success(function (data) {
                        if (data.action === "add") {
                            $(spanEl).addClass(" animated rubberBand");
                            spanEl.style.color = "goldenrod";   
                        }
                        else if (data.action === "delete") {
                            $(spanEl).removeClass(" animated rubberBand");
                            spanEl.style.color = "black";  
                        }
                    });
            });

                $(".js-vote").click(function (e) {

                    var element = e.target;
                    var voteCounter = $(element).closest(".vote").find(".vote-counter")[0];
                    var voteDto = {
                        voteAction: parseInt(element.getAttribute("data-vote-action")),
                        questionId: $(element).attr("data-questionId")
                    };

                    $.post("/api/vote", voteDto)
                        .success(function (data, status, xhr) {
                            if (xhr.responseJSON && xhr.responseJSON.isVoteUp) {
                                bootbox.alert({
                                    title: "Opps!",
                                    message: "Daha önce bu soru için oy hakkınızı kullandınız",
                                    buttons: {
                                        ok: {
                                            label: "Tamam"
                                        }
                                    }
                                });
                                return;
                            }

                            if (xhr.responseJSON && xhr.responseJSON.isRollBack) {
                                var elements = $(element).closest(".vote").find(".js-vote");
                                elements.each(function(index,el) {
                                    el.style.color = "black";
                                });
                            } else {
                                element.style.color = "goldenrod";
                            }

                            voteCounter.innerText = parseInt(voteCounter.innerText) + parseInt(voteDto.voteAction);
                        })
                        .fail(function (xhr, status) {
                            console.log(xhr.message);
                        });
                });
            }

        });

        function getFavoriteQuestions() {
            $.ajax({
                method: "Get",
                url: "/api/favorite/",
                success: function (data) {
                    data.forEach(function (id) {
                        var favoriteQuestion = $(".favorite [data-questionId ='" + id + "']");
                        favoriteQuestion[0].style.color = "goldenrod";
                    });
                }
            });
        };

    </script>
}
